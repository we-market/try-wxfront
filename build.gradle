buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'application'
//mainClassName = "cn.wemarket.wxfront.biz.server.WxfrontApplication"

group = 'cn.wemarket'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

List apache_commons= [
        "org.apache.commons:commons-text:1.4",
        "org.apache.commons:commons-configuration2:2.2"
]

def httpclient = [
        "org.apache.httpcomponents:httpclient:4.5.6"
]

def jackson = [
        "com.fasterxml.jackson.core:jackson-core:2.9.8"
]

def guava = [
        "com.google.guava:guava:23.0"
]


configurations {
    //remove default logger
    providedRuntime
    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {

    compile ('org.springframework.boot:spring-boot-starter-log4j2')

    compile('org.springframework.boot:spring-boot-starter-web')

    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile apache_commons, httpclient, jackson, guava
    testCompile apache_commons, httpclient, jackson, guava
    runtime apache_commons, httpclient, jackson, guava
}

jar {
    configurations.runtime.each { println it.path }
    println "========="
    configurations.compile.each { println it.path }
    println "========="


    from {
        //添加依懒到打包文件
        configurations.runtime.collect { zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': "cn.wemarket.wxfront.biz.server.WxfrontApplication"
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from configurations.runtime
    into('build/libs/lib')
}

task release(type: Copy, dependsOn: [build, clearJar, copyJar])